" General
set relativenumber
syntax on
set bs=2
" colorscheme slate

"Tab to spaces
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set expandtab

"Make j and k work through line wrap
:nnoremap j gj
:nnoremap k gk

"Hard Line Wrap for prose
autocmd BufRead,BufNewFile *.md setlocal formatoptions=ant
"autocmd BufRead,BufNewFile *.md setlocal textwidth=80
autocmd BufRead,BufNewFile *.md setlocal wrapmargin=0

"Make search case insensitive
set hlsearch
set incsearch
set ignorecase
set smartcase

" Set map leader
let mapleader = ","

"Move around tabs
map <Leader>n <esc>:tabprevious<CR>
map <Leader>m <esc>:tabnext<CR>

"Move around windows
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

"Better tabs
vnoremap < <gv
vnoremap > >gv


" Spell check
"setlocal spell
inoremap <C-l> <c-g>u<Esc>[s1z=`]a<c-g>u

" Plugin manager
call pathogen#infect()

"Vim-powerline
set laststatus=2

"CtrlP
let g:ctrlp_max_height = 30
set wildignore+=*.pyc

"Auto complete (JediVim and Omni Complete)

set completeopt=longest,menuone
function! OmniPopup(action)
    if pumvisible()
        if a:action == 'j'
            return "\<C-N>"
        elseif a:action == 'k'
            return "\<C-P>"
        endif
    endif
    return a:action
endfunction

inoremap <silent><C-j> <C-R>=OmniPopup('j')<CR>
inoremap <silent><C-k> <C-R>=OmniPopup('k')<CR>

"Vimtex
let g:tex_flavor='latex'

"UltiSnips
"let g:UltiSnipsSnippetDirecotries = ['~/.vim/UltiSnips', 'UltiSnips']
let g:UltiSnipsExpandTrigger = '<tab>'
let g:UltiSnipsJumpForwardTrigger = '<tab>'
let g:UltiSnipsJumpBakcwardTrigger = '<tab>'

"Python folding
set nofoldenable

set nocompatible
filetype plugin on

"Autosaving
let g:auto_save = 1

"LaTeX Configs
let g:livepreview_previewer = 'zathura'
let g:auto_save_in_insert_move = 0

" Inkscape Figures shortcuts (optimized for Markdown)
nnoremap <C-f> :exec '.!~/scripts/vim/ink.py %:r "'.getline(".").'"' <Esc>

"Optimized note-taking with LaTeX
nnoremap <Leader>t <Esc>:silent exec '!xelatex -interaction=nonstopmode master.tex > /dev/null 2>&2 &' <Esc>:redraw!<CR>
" nnoremap <Leader>z <Esc>:silent exec '!zathura %:r.pdf > /dev/null 2>&2 &'

autocmd FileType tex nmap <buffer> <C-T> :!xelatex %<CR>
"autocmd FileType tex nmap <buffer> <C-T> :!xelatex master.tex<CR>
"autocmd FileType tex nmap <buffer> T :!zathura %:r.pdf<CR><CR>
"autocmd FileType tex nmap <buffer> T : silent exec '!zathura master.pdf'<CR><CR>
filetype plugin indent on

" Allow Ultisnips to work in Markdown Files (that Vimwiki controls)
let g:vimwiki_table_mappings = 0

" Refresh after window resizes
set term=kitty


" WolframAlpha
nnoremap <Leader>z :exec '.!~/scripts/vim/vimwolf.py "'.getline(".").'"' <Esc>:redraw!<CR>

" yash and python
autocmd FileType python map <buffer> <F6> :w<CR>:exec '!python3' shellescape(@%, 1)<CR>
autocmd FileType python imap <buffer> <F6> <esc>:w<CR>:exec '!python3' shellescape(@%, 1)<CR>

" Tab = 2 spaces
set tabstop=2 softtabstop=2 shiftwidth=2
set expandtab
